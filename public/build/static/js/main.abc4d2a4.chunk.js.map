{"version":3,"sources":["store/reducer/usersReducer.js","store/reducer/searchReducer.js","store/reducer/goodsReducer.js","store/reducer/orderReducer.js","store/reducer/routerReducer.js","store/reducer/cateReducer.js","store/reducer/index.js","store/actionType/cateType.js","store/index.js","store/actionType/usersType.js","store/actionType/searchType.js","utils/storage.js","store/actionType/routerType.js","store/actionType/goodsType.js","store/actionType/orderType.js","router/PrivateRoute.js","router/modules/my.js","router/index.js","App.js","serviceWorker.js","index.js"],"names":["initState","token","user","defaultState","searchInput","keyword","goods","order_list","path","paths","cates","rootReducer","combineReducers","usersReducer","state","action","type","data","LOGIN","newState","GET_USER_INFO","searchReducer","searchKeyWord","Object","assign","value","clearKeyWord","goodsReducer","GETGOODSLIST","orderReducer","GETORDERSLIST","routerReducer","CHANGEPATH","cateReducer","persistConfig","key","storage","stateReconciler","autoMergeLevel2","myPersistReducer","persistReducer","reducer","store","createStore","applyMiddleware","reduxThunk","persistor","persistStore","Cookie","getItem","document","cookie","startIndex","indexOf","length","endIndex","decodeURIComponent","substring","setItem","time","times","cur","Date","setTime","getTime","encodeURIComponent","undefined","toUTCString","removeItem","this","PrivateRoute","Component","component","rest","console","log","render","props","Boolean","to","pathname","from","location","React","lazy","exact","auth","MyRoutes","App","routes","map","item","index","fallback","className","window","hostname","match","ReactDOM","loading","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"sJAGMA,EAAY,CAChBC,MAAO,GACPC,KAAM,I,QCJFC,EAAe,CACnBC,YAAa,CACXC,QAAS,K,eCDPL,EAAW,CACbM,MAAM,I,QCDJN,EAAW,CACbO,WAAW,I,QCFTP,EAAU,CACZQ,KAAK,KACLC,MAAM,CAAC,IAAI,SAAS,QAAQ,QAAQ,QCFlCT,EAAU,CACZU,MAAM,ICuBKC,EARKC,YAAgB,CAChCC,aNTW,WAAgC,IAA/BC,EAA8B,uDAAtBd,EAAWe,EAAW,uCACpCC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACd,GAAGD,IAASE,IAAO,CACjB,IAAMC,EAAWL,EAEjB,OADAK,EAASlB,MAAQgB,EACVE,EACH,GAAGH,IAASI,IAAe,CAC/B,IAAMD,EAAWL,EAEjB,OADAK,EAASjB,KAAOe,EACTE,EAET,OAAOL,GMDLO,cLbW,WAAmC,IAAlCP,EAAiC,uDAAzBX,EAAcY,EAAW,uCAC/C,GAAIA,EAAOC,OAASM,IAAe,CACjC,IAAIH,EAAWI,OAAOC,OAAO,GAAIV,GAEjC,OADAK,EAASf,YAAYC,QAAUU,EAAOU,MAC/BN,EACH,GAAIJ,EAAOC,OAASU,IAAc,CACtC,IAAIP,EAAWI,OAAOC,OAAO,GAAIV,GAEjC,OADAK,EAASf,YAAYC,QAAUU,EAAOU,MAC/BN,EAET,OAAOL,GKILa,aJfW,WAA2B,IAA1Bb,EAAyB,uDAAnBd,EAAUe,EAAS,uCACrC,OAAOA,EAAOC,MACV,KAAKY,IACD,OAAO,2BACAd,GADP,IAEIR,MAAMS,EAAOT,QAErB,QACI,OAAOQ,IIQfe,aHhBW,WAA2B,IAA1Bf,EAAyB,uDAAnBd,EAAUe,EAAS,uCAC7BC,EAAqBD,EAArBC,KAAMT,EAAeQ,EAAfR,WACd,OAAOS,GACH,KAAKc,IACD,OAAO,2BACAhB,GADP,IAEIP,WAAYA,IAEpB,QACI,OAAOO,IGQfiB,cFjBW,WAA2B,IAA1BjB,EAAyB,uDAAnBd,EAAUe,EAAS,uCACrC,OAAOA,EAAOC,MACV,KAAKgB,IACD,OAAO,2BACAlB,GADP,IAEIN,KAAKO,EAAOP,OAEpB,QACI,OAAOM,IEUfmB,YDnBW,WAA2B,IAA1BnB,EAAyB,uDAAnBd,EAAUe,EAAS,uCACrC,OAAOA,EAAOC,MACV,IENgB,WFOZ,OAAO,2BACAF,GADP,IAEIJ,MAAMK,EAAOE,OAErB,QACI,OAAOH,M,kDGDboB,EAAgB,CAClBC,IAAK,OACLC,QAASA,IACTC,gBAAiBC,KAGfC,EAAmBC,YAAeN,EAAeO,GAIjDC,EAAQC,YAAYJ,EAAkBK,YAAgBC,MAG/CC,EAAYC,YAAaL,GACvBA,O,gCCzBf,oEAAO,IAAMxB,EAAO,QACPE,EAAgB,iB,gCCD7B,oEAAO,IAAME,EAAgB,gBAChBI,EAAe,gB,gCCD5B,sCAAMsB,EAAS,CAEXC,QAFW,SAEHd,GAEJ,IAAMlB,EAAOiC,SAASC,OAElBC,EAAanC,EAAKoC,QAAQlB,EAAM,KAEpC,GAAIiB,GAAc,EAAG,CAEjBA,EAAaA,EAAajB,EAAImB,OAAS,EAEvC,IAAIC,EAAWtC,EAAKoC,QAAQ,IAAKD,GAIjC,OAFAG,EAAWA,EAAW,EAAItC,EAAKqC,OAASC,EAEjCC,mBAAmBvC,EAAKwC,UAAUL,EAAYG,IAErD,MAAO,IAIfG,QAtBW,SAsBHvB,EAAKV,EAAOkC,GAEhB,IAAMC,EAAQD,GAAQ,EAEhBE,EAAM,IAAIC,KAEhBD,EAAIE,QAAQF,EAAIG,UAAoB,GAARJ,EAAa,KAAO,KAEhDV,SAASC,OAAShB,EAAM,IAAM8B,mBAAmBxC,GAAS,kBAAyByC,IAAVN,EAAsB,GAAKC,EAAIM,gBAG5GC,WAjCW,SAiCAjC,GAEP,IAAMlB,EAAOoD,KAAKpB,QAAQd,IAEb,IAATlB,GACAoD,KAAKX,QAAQvB,EAAKlB,GAAO,M,gCCtCrC,kCAAO,IAAMe,EAAa,c,gCCA1B,kCAAO,IAAMJ,EAAe,gB,gCCA5B,kCAAO,IAAME,EAAgB,iB,yMCKvBwC,EAAe,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,6BAClDxE,EAAQ+C,IAAOC,QAAQ,SAE7B,OADAyB,QAAQC,IAAI,UAAW1E,GAEnB,kBAAC,IAAD,iBACIwE,EADJ,CAIAG,OAAQ,SAAAC,GAAK,OACTC,QAAQ7E,GAEJ,kBAACsE,EAAcM,GAGf,kBAAC,IAAD,CACIE,GAAI,CACAC,SAAU,SACVlE,MAAO,CAAEmE,KAAMJ,EAAMK,kB,QCpB9B,GACb,CACE1E,KAAM,MACNgE,UAAWW,IAAMC,MAAM,kBAAM,6EAC7BC,OAAO,GAET,CACE7E,KAAM,iBACNgE,UAAWW,IAAMC,MAAM,kBAAM,6EAC7BE,MAAM,GAER,CACE9E,KAAM,aACNgE,UAAWW,IAAMC,MAAM,kBAAM,wDAC7BE,MAAM,GAER,CACE9E,KAAM,mBACNgE,UAAWW,IAAMC,MAAM,kBAAM,wDAC7BE,MAAM,GAER,CACE9E,KAAM,YACNgE,UAAWW,IAAMC,MAAM,kBAAM,wDAC7BE,MAAM,GAER,CACE9E,KAAM,YACNgE,UAAWW,IAAMC,MAAM,kBAAM,8EAC7BE,MAAM,GAER,CACE9E,KAAM,YACNgE,UAAWW,IAAMC,MAAM,kBAAM,6EAC7BE,MAAM,ICjCI,GACZ,CACE9E,KAAM,SACNgE,UAAWW,IAAMC,MAAM,kBAAM,6EAC7BC,OAAO,GAET,CACE7E,KAAM,YACNgE,UAAWW,IAAMC,MAAM,kBAAM,6EAC7BC,OAAO,GAET,CACE7E,KAAM,SACNgE,UAAWW,IAAMC,MAAM,kBAAM,4EAC7BC,OAAO,GAET,CACE7E,KAAM,QACNgE,UAAWW,IAAMC,MAAM,kBAAM,6EAC7BC,OAAO,GAET,CACE7E,KAAM,QACNgE,UAAWW,IAAMC,MAAM,kBAAM,6EAC7BC,OAAO,GAET,CACE7E,KAAM,UACNgE,UAAWW,IAAMC,MAAM,kBAAM,8EAG/B,CACE5E,KAAM,qBACNgE,UAAWW,IAAMC,MAAM,kBAAM,8EAE/B,CACE5E,KAAM,mBACNgE,UAAWW,IAAMC,MAAM,kBAAM,8EAE/B,CACE5E,KAAM,mBACNgE,UAAWW,IAAMC,MAAM,kBAAM,0DAzCjC,mBA2CKG,GA3CL,CA6CE,CACEf,UAAWW,IAAMC,MAAM,kBAAM,qCCblBI,MA7Bf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAUH,OAAK,EAACJ,KAAK,IAAIF,GAAG,WAExBU,EAAOC,KAAI,SAACC,EAAKC,GAAW,IACPrB,EAAuBoB,EAAlCnB,UAAyBC,EADR,YACiBkB,EADjB,eAEzB,OAAO,kBAAC,IAAD,iBACHlB,EADG,CAEPG,OAAQ,SAAAC,GAAK,OACX,kBAAC,WAAD,CAAUgB,SAAU,yBAAKC,UAAU,WAAf,eAEfH,EAAKL,KACJ,kBAAC,EAAD,CAAed,UAAWD,IADf,kBAACA,EAAcM,KAKlC1C,IAAKyD,WCdCd,QACW,cAA7BiB,OAAOb,SAASc,UAEe,UAA7BD,OAAOb,SAASc,UAEhBD,OAAOb,SAASc,SAASC,MACvB,2D,kCCJNC,IAAStB,OACP,kBAAC,IAAD,CAAUlC,MAAOA,KACf,kBAAC,cAAD,CAAayD,QAAS,KAAMrD,UAAWA,KACrC,kBAAC,EAAD,QAGJI,SAASkD,eAAe,SD+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlC,QAAQkC,MAAMA,EAAMC,c","file":"static/js/main.abc4d2a4.chunk.js","sourcesContent":["import { LOGIN } from '../actionType/usersType'\r\nimport { GET_USER_INFO } from '../actionType/usersType'\r\n\r\nconst initState = {\r\n  token: '',\r\n  user: {\r\n\r\n  }\r\n}\r\nexport default (state = initState, action) => {\r\n  const { type, data } = action\r\n  if(type === LOGIN) {\r\n    const newState = state\r\n    newState.token = data\r\n    return newState\r\n  }else if(type === GET_USER_INFO) {\r\n    const newState = state\r\n    newState.user = data\r\n    return newState\r\n  }\r\n  return state\r\n}","import { searchKeyWord, clearKeyWord } from \"../actionType/searchType\";\r\nconst defaultState = {\r\n  searchInput: {\r\n    keyword: ''\r\n  }\r\n};\r\nexport default (state = defaultState, action) => {\r\n  if (action.type === searchKeyWord) {\r\n    let newState = Object.assign({}, state);\r\n    newState.searchInput.keyword = action.value;\r\n    return newState;\r\n  }else if (action.type === clearKeyWord) {\r\n    let newState = Object.assign({}, state);\r\n    newState.searchInput.keyword = action.value;\r\n    return newState;\r\n  }\r\n  return state;\r\n}","import {GETGOODSLIST} from '../actionType/goodsType'\r\n\r\nconst initState ={\r\n    goods:[]\r\n}\r\nexport default (state=initState,action)=>{\r\n    switch(action.type){\r\n        case GETGOODSLIST:\r\n            return {\r\n                ...state,\r\n                goods:action.goods\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {GETORDERSLIST} from '../actionType/orderType'\r\n\r\nconst initState ={\r\n    order_list:[]\r\n}\r\nexport default (state=initState,action)=>{\r\n    const { type, order_list } = action\r\n    switch(type){\r\n        case GETORDERSLIST:\r\n            return {\r\n                ...state,\r\n                order_list: order_list\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {CHANGEPATH} from '../actionType/routerType'\nconst initState={\n    path:null,\n    paths:['/','/index','/cate','/cart','/my']\n}\nexport default (state=initState,action)=>{\n    switch(action.type){\n        case CHANGEPATH:\n            return {\n                ...state,\n                path:action.path\n            }\n        default:\n            return state\n    }\n}","import { GET_CATE } from '../actionType/cateType'\nconst initState={\n    cates:[]\n}\nexport default (state=initState,action)=>{\n    switch(action.type){\n        case GET_CATE:\n            return {\n                ...state,\n                cates:action.data\n            }\n        default:\n            return state\n    }\n}","// 1 引入 合并reducer的对象\r\nimport { combineReducers } from \"redux\";\r\n//用户\r\nimport usersReducer from './usersReducer'\r\n//搜索\r\nimport searchReducer from \"./searchReducer\";\r\n//商品\r\nimport goodsReducer from './goodsReducer'\r\n//订单\r\nimport orderReducer from './orderReducer'\r\n//路由\r\nimport routerReducer from \"./routerReducer\";\r\n//分类\r\nimport cateReducer from './cateReducer'\r\n\r\n// 2 对象的形式传入 要合并的reducer\r\n\r\nconst rootReducer = combineReducers({ \r\n    usersReducer,\r\n    searchReducer,\r\n    goodsReducer,\r\n    orderReducer,\r\n    routerReducer, \r\n    cateReducer\r\n});\r\nexport default rootReducer;","export const GET_CATE = 'GET_CATE'","//  引入 store生成器\r\nimport { createStore, applyMiddleware } from \"redux\";\r\n//  引入reducer\r\nimport reducer from \"./reducer\";\r\nimport reduxThunk from \"redux-thunk\";\r\n\r\n//  引入redux-persist实现redux数据持久化\r\nimport {persistStore, persistReducer} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2 // 查看 'Merge Process' 部分的具体情况\r\n};\r\n\r\nconst myPersistReducer = persistReducer(persistConfig, reducer)\r\n\r\n//  创建store 使用中间件连接器将redux-thunk传入 store构造器\r\n// const store = createStore(reducer, applyMiddleware(reduxThunk));\r\nconst store = createStore(myPersistReducer, applyMiddleware(reduxThunk));\r\n\r\n\r\nexport const persistor = persistStore(store)\r\nexport default store","export const LOGIN ='LOGIN'\r\nexport const GET_USER_INFO = 'GET_USER_INFO'\r\n","export const searchKeyWord = \"searchKeyWord\";\r\nexport const clearKeyWord = 'clearKeyWord'","const Cookie = {\r\n    //根据key值获取对应的cookie\r\n    getItem(key) {\r\n        //获取cookie\r\n        const data = document.cookie\r\n        //获取key第一次出现的位置\r\n        let startIndex = data.indexOf(key + '=')\r\n        //如果开始索引值大于0表示有cookie\r\n        if (startIndex > -1) {\r\n            //key的起始位置等于出现的位置加key的长度+1\r\n            startIndex = startIndex + key.length + 1\r\n            //结束位置等于从key开始的位置之后第一次;号所出现的位置\r\n            let endIndex = data.indexOf(';', startIndex)\r\n            //如果未找到结尾位置则结尾位置等于cookie长度，之后的内容全部获取\r\n            endIndex = endIndex < 0 ? data.length : endIndex\r\n\r\n            return decodeURIComponent(data.substring(startIndex, endIndex))\r\n        } else {\r\n            return ''\r\n        }\r\n    },\r\n\r\n    setItem(key, value, time) {\r\n        //默认保存时间\r\n        const times = time || 1\r\n        //获取当前时间\r\n        const cur = new Date()\r\n        // 设置指定时间\r\n        cur.setTime(cur.getTime() + times * 24 * 3600 * 1000)\r\n        //创建cookie  并且设置生存周期为UTC时间\r\n        document.cookie = key + '=' + encodeURIComponent(value) + ';expires=' + (times === undefined ? '' : cur.toUTCString())\r\n    },\r\n\r\n    removeItem(key) {\r\n        //获取cookie\r\n        const data = this.getItem(key)\r\n        //如果获取到cookie则重新设置cookie的生存周期为过去时间\r\n        if (data !== false) {\r\n            this.setItem(key, data, -1)\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    Cookie\r\n}","export const CHANGEPATH = 'CHANGEPATH'","export const GETGOODSLIST = 'GETGOODSLIST'\r\n","export const GETORDERSLIST = 'GETORDERSLIST'\r\n","\r\nimport React from 'react'; \r\nimport {Redirect,Route} from 'react-router-dom';\r\nimport { Cookie } from '../utils/storage'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const token = Cookie.getItem(\"token\")\r\n    console.log('token: ', token);\r\n    return (\r\n        <Route\r\n        {...rest}\r\n         //props 包含值：history，location，match\r\n        //login 页面可以通过 this.props.location.state.from知道是哪个页面过来的,方便登录后直接跳转\r\n        render={props =>\r\n            Boolean(token) ?\r\n            (\r\n                <Component {...props} />\r\n            )\r\n             : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/login\",\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n    )\r\n}\r\nexport {\r\n    PrivateRoute\r\n}","import React from 'react'\r\n\r\nexport default [\r\n  {\r\n    path: '/my',\r\n    component: React.lazy( () => import('../../pages/My/My')),\r\n    exact: true,\r\n  },\r\n  {\r\n    path: '/my/collection',\r\n    component: React.lazy( () => import('../../pages/My/Collection')),\r\n    auth: true\r\n  },\r\n  {\r\n    path: '/my/follow',\r\n    component: React.lazy( () => import('../../pages/My/Follow')),\r\n    auth: true\r\n  },\r\n  {\r\n    path: '/my/browserecord',\r\n    component: React.lazy( () => import('../../pages/My/BrowseRecord')),\r\n    auth: true\r\n  },\r\n  {\r\n    path: '/my/purse',\r\n    component: React.lazy( () => import('../../pages/My/Mypurse')),\r\n    auth: true\r\n  },\r\n  {\r\n    path: '/my/setup',\r\n    component: React.lazy( () => import('../../pages/My/SetUp')),\r\n    auth: true\r\n  },\r\n  {\r\n    path: '/my/order',\r\n    component: React.lazy( () => import('../../pages/My/Order')),\r\n    auth: true\r\n  },\r\n]","import React from 'react'\r\nimport MyRoutes from './modules/my'\r\n\r\nexport default [\r\n  {\r\n    path: '/login',\r\n    component: React.lazy( () => import('../pages/Login')),\r\n    exact: true\r\n  },\r\n  {\r\n    path: '/register',\r\n    component: React.lazy( () => import('../pages/Register')),\r\n    exact: true\r\n  },\r\n  {\r\n    path: '/index',\r\n    component: React.lazy( () => import('../pages/Home')),\r\n    exact: true\r\n  },\r\n  {\r\n    path: '/cate',\r\n    component: React.lazy( () => import('../pages/Cate')),\r\n    exact: true\r\n  },\r\n  {\r\n    path: '/cart',\r\n    component: React.lazy( () => import('../pages/Cart')),\r\n    exact: true\r\n  },\r\n  {\r\n    path: '/search',\r\n    component: React.lazy( () => import('../pages/Search')),\r\n\r\n  },\r\n  {\r\n    path: '/listpage/:keyword',\r\n    component: React.lazy( () => import('../pages/ListPage')),\r\n  },\r\n  {\r\n    path: '/goodsDetail/:id',\r\n    component: React.lazy( () => import('../pages/GoodsDetail')),\r\n  },\r\n  {\r\n    path: '/createOrder/:id',\r\n    component: React.lazy( () => import('../pages/CreateOrder')),\r\n  },\r\n  ...MyRoutes,\r\n\r\n  {\r\n    component: React.lazy( () => import('../pages/NotFound')),\r\n  }\r\n]","import React, { Suspense } from 'react'\r\nimport './App.css'\r\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\"\r\nimport { PrivateRoute } from './router/PrivateRoute'\r\nimport routes from './router'\r\n// import NotFound from './pages/NotFound'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {/* 请求根路径时重定向到 /index 主页 */}\r\n        <Redirect exact from='/' to='/index' />\r\n          {\r\n            routes.map((item,index) => {\r\n              const { component: Component, ...rest } = item\r\n              return <Route\r\n              {...rest}\r\n              render={props =>\r\n                <Suspense fallback={<div className='loading'>Loading...</div>}>\r\n                  {\r\n                    !item.auth ? <Component {...props} />\r\n                    : <PrivateRoute  component={Component} />\r\n                  }\r\n                </Suspense>\r\n              }\r\n              key={index} />\r\n            })\r\n          }\r\n          {/* 路径不匹配显示404页面 */}\r\n          {/* <Route component={NotFound} /> */}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// 引入 react-redux  负责将store和组件连接起来\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n// 引入redux-persist实现redux数据持久化\nimport { persistor } from './store'\nimport { PersistGate } from 'redux-persist/lib/integration/react';\n\nimport \"lib-flexible\"\n\nReactDOM.render(\n  <Provider store={store} >\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}