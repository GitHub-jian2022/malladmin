{"version":3,"sources":["pages/Search.jsx"],"names":["Search","state","history_list","onSubmit","value","props","searchByKeyWord","history","push","pathname","JSON","parse","localStorage","getItem","includes","unshift","setItem","stringify","delHistory","setState","removeItem","this","className","style","paddingLeft","paddingRight","display","justifyContent","alignItems","color","onClick","map","item","index","key","Component","connect","routes","routerReducer","dispatch"],"mappings":"4MAMMA,G,mNACJC,MAAQ,CAENC,aAAc,I,EAYhBC,SAAW,SAACC,GAEV,EAAKC,MAAMC,gBAAgBF,GAE3B,EAAKC,MAAME,QAAQC,KAAK,CACtBC,SAAU,aAAeL,IAG3B,IAAIF,EAAeQ,KAAKC,MAAMC,aAAaC,QAAQ,kBAAoB,GACnEX,EAAaY,SAASV,KAE1BF,EAAaa,QAAQX,GACrBQ,aAAaI,QAAQ,eAAgBN,KAAKO,UAAUf,M,EAGtDgB,WAAa,WACX,EAAKC,SAAS,CAAEjB,aAAc,KAC9BU,aAAaQ,WAAW,iB,kEAxBxB,IAAIlB,EAAeQ,KAAKC,MAAMC,aAAaC,QAAQ,kBAAoB,GACvEQ,KAAKF,SAAS,CACZjB,iBAGFU,aAAaI,QAAQ,eAAgBN,KAAKO,UAAUf,M,+BAsB5C,IAAD,OACCA,EAAiBmB,KAAKpB,MAAtBC,aACR,OACE,yBAAKoB,UAAU,UACb,kBAAC,IAAD,CAAenB,SAAUkB,KAAKlB,WAE9B,yBAAKmB,UAAU,gBAAgBC,MAAO,CAAEC,YAAa,GAAIC,aAAc,KACrE,yBAAKF,MAAO,CAAEG,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,WAC1E,wBAAIN,UAAU,QAAQC,MAAO,CAAEM,MAAO,SAAtC,4BACA,0BAAMP,UAAU,eAAeQ,QAAST,KAAKH,YAA7C,WAGF,yBAAKI,UAAU,gBACZpB,EAAa6B,KAAI,SAACC,EAAMC,GAAP,OAChB,yBACEX,UAAU,oBACVY,IAAKD,EACLH,QAAS,WACP,EAAKzB,MAAMC,gBAAgB0B,GAC3B,EAAK3B,MAAME,QAAQC,KAAK,CACtBC,SAAU,aAAeuB,MAG5BA,a,GA1DIG,cAmFNC,uBAfS,SAACnC,GACvB,MAAO,CACLoC,OAAQpC,EAAMqC,kBAIS,SAACC,GAC1B,MAAO,CACLjC,gBAAiB,SAACF,GAChBmC,EAASjC,YAAgBF,QAMhBgC,CAA6CpC","file":"static/js/26.da3c1dd0.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { AntdSearchBar } from '../components/index'\r\nimport { connect } from \"react-redux\";\r\nimport { searchByKeyWord } from '../store/action/searchAction'\r\nimport '../assets/styles/Search.scss'\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    // ['手机', '电脑', '耳机', '投影仪', '办公设备', '手表', '宠物', '花卉']\r\n    history_list: [] \r\n  }\r\n\r\n  componentDidMount() {\r\n    //获取本地存储搜索记录\r\n    let history_list = JSON.parse(localStorage.getItem('history_list')) || []\r\n    this.setState({\r\n      history_list\r\n    })\r\n    //模拟数据\r\n    localStorage.setItem('history_list', JSON.stringify(history_list))\r\n  }\r\n  onSubmit = (value) => {\r\n    //更新store中的state值\r\n    this.props.searchByKeyWord(value)\r\n    // 跳转列表页\r\n    this.props.history.push({\r\n      pathname: '/listpage/' + value\r\n    })\r\n    //获取本地存储搜索记录\r\n    let history_list = JSON.parse(localStorage.getItem('history_list')) || []\r\n    if (history_list.includes(value)) return\r\n    //添加新的搜索到本地存储\r\n    history_list.unshift(value)\r\n    localStorage.setItem('history_list', JSON.stringify(history_list))\r\n  }\r\n\r\n  delHistory = () => {\r\n    this.setState({ history_list: [] })\r\n    localStorage.removeItem('history_list')\r\n  }\r\n\r\n  render() {\r\n    const { history_list } = this.state\r\n    return (\r\n      <div className='Search'>\r\n        <AntdSearchBar onSubmit={this.onSubmit} />\r\n        {/* 最近搜索部分 */}\r\n        <div className='recent_search' style={{ paddingLeft: 10, paddingRight: 10 }}>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n            <h3 className='title' style={{ color: '#f00' }}>最近搜索</h3>\r\n            <span className=\"iconfont del\" onClick={this.delHistory}\r\n            >&#xe604;</span>\r\n          </div>\r\n          <div className='history_list'>\r\n            {history_list.map((item, index) => (\r\n              <div\r\n                className='history_list_item'\r\n                key={index}\r\n                onClick={() => {\r\n                  this.props.searchByKeyWord(item)\r\n                  this.props.history.push({\r\n                    pathname: '/listpage/' + item\r\n                  })\r\n                }}>\r\n                {item}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    routes: state.routerReducer\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    searchByKeyWord: (value) => {\r\n      dispatch(searchByKeyWord(value));\r\n    }\r\n  }\r\n}\r\n\r\n// 用 connect 将store中的数据通过props的方式传递到App上\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search)"],"sourceRoot":""}