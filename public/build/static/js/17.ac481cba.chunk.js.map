{"version":3,"sources":["store/action/usersAction.js","utils/Tool.js","pages/Register.jsx","utils/urls.js","utils/request.js","api/api.js"],"names":["login","phone","password","dispatch","a","axios","post","Api","res","action","type","LOGIN","data","Cookie","setItem","JSON","stringify","getUserInfo","token","localStorage","GET_USER_INFO","CryptoJS","require","key","encrypt","text","AES","toString","Register","state","register","trim","length","fail","code","msg","props","className","onClick","history","push","placeholder","clear","onChange","setState","this","Component","withRouter","connect","value","REACT_APP_API_URL","process","REACT_APP_STATIC_URL","Axios","create","baseURL","interceptors","request","use","config","loading","timeout","getItem","headers","error","console","log","hide","Promise","reject","response","getBanners","getNavs","getAdverts","getCate","getCartList","getGoodsList","getGoodInfo","getOrderList"],"mappings":"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","file":"static/js/17.ac481cba.chunk.js","sourcesContent":["import { LOGIN } from '../actionType/usersType'\r\nimport { GET_USER_INFO } from '../actionType/usersType'\r\nimport { Api, axios } from '../../api/api'\r\nimport { Cookie } from '../../utils/storage'\r\n\r\nexport const login = ({phone,password}) => async(dispatch)=>{\r\n    const res = await axios.post(Api.login,{phone,password})\r\n    // console.log('res',res)\r\n    const action = {\r\n        type: LOGIN,\r\n        data: res.data\r\n    }\r\n    dispatch(action)\r\n    Cookie.setItem('token',JSON.stringify(res.data),2)\r\n    dispatch(getUserInfo(res.data))\r\n}\r\n\r\nexport const getUserInfo = (token) => async(dispatch)=>{\r\n    const res = await axios.post(Api.getUserInfo,{token})\r\n    // console.log('res',res)\r\n    const { data } = res\r\n    localStorage.setItem('user',JSON.stringify(data))\r\n    const action = {\r\n        type: GET_USER_INFO,\r\n        data\r\n    }\r\n    dispatch(action)\r\n}","const CryptoJS = require(\"crypto-js\");\r\n\r\nconst key = 'useyourkey'\r\n\r\n// Encrypt 加密\r\nexport function encrypt(text){\r\n  return CryptoJS.AES.encrypt(text, key).toString();\r\n}\r\n\r\n\r\n// Decrypt 解密\r\nexport function decrypt(cipherText){\r\n  let bytes = CryptoJS.AES.decrypt(cipherText, key);\r\n  return bytes.toString(CryptoJS.enc.Utf8);\r\n}\r\n\r\n","import React, { Component,Fragment } from 'react'\r\nimport { InputItem, Toast } from 'antd-mobile';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from \"react-redux\";\r\nimport { login } from '../store/action/usersAction'\r\nimport { axios, Api } from \"../api/api\"\r\nimport \"../assets/styles/Register.scss\"\r\nimport { encrypt } from '../utils/Tool'\r\n\r\n class Register extends Component {\r\n  state = {\r\n    phone: '',\r\n    password: '',\r\n  }\r\n  register = async () => {\r\n    const { phone, password } = this.state;\r\n    if(phone.trim() == '' || phone.length < 11) {\r\n      Toast.fail('手机号格式不正确',1)\r\n      return\r\n    }\r\n    if(password.trim() == '') {\r\n      Toast.fail('密码不能为空',1)\r\n      return\r\n    }else if(password.length < 6) {\r\n      Toast.fail('密码长度应不小于6位数',1)\r\n      return\r\n    }\r\n    let res = await axios.post(Api.register,{\r\n      phone,\r\n      password: encrypt(password)\r\n    })\r\n    if(res.code == 401) {\r\n      Toast.fail(res.msg,1)\r\n    }else {\r\n      this.props.login({ phone, password: encrypt(password) })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className='bg'>\r\n          {/* <span onClick={()=>this.props.history.push('/login')}>X</span> */}\r\n        </div>\r\n        <div className='login'>\r\n          <div className='registered'>\r\n            <h3 onClick={()=>{\r\n              this.props.history.push('/login')\r\n            }}>登录</h3>\r\n          </div>\r\n          <div className='userName'>\r\n            <InputItem\r\n              placeholder=\"手机号\"\r\n              clear\r\n              onChange={phone => this.setState({ phone })}\r\n            ></InputItem>\r\n          </div>\r\n          <div className='password'>\r\n            <InputItem\r\n              type='password'\r\n              placeholder=\"请输入密码\"\r\n              clear\r\n              onChange={password => this.setState({ password })}\r\n            ></InputItem>\r\n          </div>\r\n          <div className='login_btn' onClick={this.register}>\r\n            注册\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    login: (value) => {\r\n      dispatch(login(value))\r\n    }\r\n  }\r\n}\r\nexport default withRouter(connect(null, mapDispatchToProps)(Register))","/* \r\n    接口访问的前缀\r\n    静态资源访问的前缀\r\n*/\r\n\r\nconst REACT_APP_API_URL = process.env.REACT_APP_API_URL\r\n\r\nconst REACT_APP_STATIC_URL = 'http://localhost:8090'\r\n\r\nexport  {\r\n    REACT_APP_API_URL,\r\n    REACT_APP_STATIC_URL\r\n}","\r\nimport Axios from \"axios\"\r\nimport { REACT_APP_API_URL } from \"./urls\";\r\nimport { Toast } from 'antd-mobile'\r\nimport { Cookie } from './storage'\r\n\r\n//1.添加通用前缀\r\nconst axios = Axios.create({\r\n    baseURL: REACT_APP_API_URL,\r\n  });\r\n//2.添加请求和返回的拦截\r\n//3.加遮罩\r\naxios.interceptors.request.use(function (config) {\r\n    Toast.loading('Loading...', 0, null,true);\r\n    config.timeout = 20000;\r\n    const token = Cookie.getItem('token') || ''\r\n    if(token) {\r\n      config.headers['Authorization'] = 'Bearer ' + token\r\n    }\r\n    return config;\r\n  }, function (error) {\r\n    console.log('error: ', error);\r\n    // Do something with request error\r\n    Toast.hide();\r\n    return Promise.reject(error);\r\n  });\r\n\r\n// Add a response interceptor\r\naxios.interceptors.response.use(function (response) {\r\n    Toast.hide();\r\n    console.log('response.data: ', response.data);\r\n    if(response.data.code === 403){\r\n      Toast.fail(response.data.msg, 2, null, true)\r\n\r\n    }else if(response.data.code === 500){\r\n      Toast.fail(response.data.msg, 2, null, true)\r\n      \r\n    }\r\n    return response.data;\r\n\r\n  }, function (error) {\r\n    // Toast.fail('请求失败', 2, null, true)\r\n    Toast.fail(error.response.msg, 2, null, true)\r\n    return Promise.reject(error);\r\n  });\r\n\r\n\r\nexport default axios","import axios from '../utils/request'\r\n\r\nconst Api = {\r\n    login: '/user/login',\r\n    register: '/user/register',\r\n    getUserInfo: '/user/getUserInfo',\r\n\r\n    getBanners: '/home/getBanners',\r\n    getNavs: '/home/getNavs',\r\n    getAdverts: '/home/getAdverts',\r\n\r\n    getCate: '/cate',\r\n\r\n    getCartList: '/alliance/cartList',\r\n\r\n    getGoodsList: '/goods/list',\r\n    getGoodInfo: '/alliance/goodInfo',\r\n    getOrderList: '/alliance/order/list',\r\n}\r\n\r\nexport {\r\n    Api,\r\n    axios\r\n}"],"sourceRoot":""}